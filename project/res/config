################################################################################
# GeometryEditor
################################################################################
geometryeditor.colors {
	background.scene = #ffffff
	background.nothing = #aaaaaa
	chains.points = #000000
	chains.lines = #000000
	editing {
		chains.points = #0000ff
		chains.lines = #0000ff
		chains.first = #ff0000
		chains.last = #ff0000
	}
	mousehighlight.node= #00ffff
	mousehighlight.chain = #00ffff
	nodes.selected = #00ffff
	nodes.snaphighlight = #00aaaa
	prospect.node = #000000
	prospect.segment = #000000
	selection.rectangle = #000000
	polygon.interior = #33ff0000
	rotation.rectangle = #000000
	scale {
		background = #ffffff
		baseline = #000000
		lines = #ff0000
		font = #000000
		marker = #000000
	}
}

################################################################################
# DCEL
################################################################################
datastructures.dcel.colors {
	background = #ffffff
	edges = #0000ff
	nodes = #000000
	arrows = #ff00ff
	connectors = #00ff00
}

################################################################################
# Fortune' Sweep
################################################################################
algorithm.voronoi.fortune.colors {
	background = #ffffff
	sweepline = #ff0000
	
	sites = #000000
	sites.done = #666666
	sites.active = #ff0000
	circle.event.point = #00ff00
	circle.event.point.active = #ff0000
	beachline.intersections = #00ff00
	spikes = #000000
	spike.intersections = #ff0000
	voronoi.segments = #0000ff
	voronoi.traces = #0000ff
	arcs = #000000
	circles = #000000
	delaunay = #999999

	sweep.control.background = #ffffff
	sweep.control.handle = #ff0000
	sweep.control.border = #000000
}

################################################################################
# Shortest Path in Polygon
################################################################################
algorithm.polygon.shortestpath {
	node.size {
		first = 4.0
		apex = 4.0
		final = 4.0
		intermediate = 3.0
	}
	size.start_target {
		radius = 6
		width = 4
	}
	width {
		polygon = 2.0
		diagonals = 1.0
		dual_graph = 1.5
		path = 2.5
		node_highlight = 3
	}
}
algorithm.polygon.shortestpath.colors {
	background = #ffffff
	node {
		start = #ff0000
		target = #00ff00
		start.outline = #000000
		target.outline = #000000
		ids = #000000
	}
	boundary = #000000
	diagonals = #000000
	dualgraph = #eeee00
	polygon = #dddddd
	sleeve = #bbbbbb
	sleeve.done = #3300ff00
	path {
		left = #0000ff
		right = #ff0000
		left.top = #0000ff
		right.top = #ff0000
		apex = #b200b2
		common = #b200b2
	}
	node_highlight = #000000
}
