################################################################################
# GeometryEditor
################################################################################
geometryeditor.colors {
	background.scene = #000000
	background.nothing = #666666
	chains.points = #00ff00
	chains.lines = #00ff00
	editing {
		chains.points = #0000ff
		chains.lines = #0000ff
		chains.first = #ff0000
		chains.last = #ff0000
	}
	mousehighlight.node= #00aaaa
	mousehighlight.chain = #999999
	nodes.selected = #00ffff
	nodes.snaphighlight = #00aaaa
	prospect.node = #00ff00
	prospect.segment = #00ff00
	selection.rectangle = #ff00ff
	polygon.interior = #33ffff00
	rotation.rectangle = #ff00ff
	scale {
		background = #333333
		baseline = #ffffff
		lines = #ff0000
		font = #ffffff
		marker = #ffffff
	}
}

################################################################################
# DCEL
################################################################################
datastructures.dcel.colors {
	background = #000000
	edges = #0000ff
	nodes = #000000
	arrows = #ff00ff
	connectors = #00ff00
}

################################################################################
# Fortune' Sweep
################################################################################
algorithm.voronoi.fortune.colors {
	background = #220000
	sweepline = #ff0000
	
	sites = #ffffff
	sites.done = #666666
	sites.active = #ff0000
	circle.event.point = #00ff00
	circle.event.point.active = #ff0000
	beachline.intersections = #00ff00
	spikes = #ffffff
	spike.intersections = #ff0000
	voronoi.segments = #0000ff
	voronoi.traces = #0000ff
	arcs = #ffffff
	circles = #ffffff
	delaunay = #999999

	sweep.control.background = #220000
	sweep.control.handle = #ff0000
	sweep.control.border = #ffffff
}

################################################################################
# Shortest Path in Polygon
################################################################################
algorithm.polygon.shortestpath {
	node.size {
		first = 4.0
		apex = 4.0
		final = 4.0
		intermediate = 3.0
	}
	size.start_target {
		radius = 6
		width = 4
	}
	width {
		polygon = 2.0
		diagonals = 1.0
		dual_graph = 1.5
		path = 2.5
	}
}
algorithm.polygon.shortestpath.colors {
	background = #000000
	node {
		start = #00ff00
		target = #00ff00
		start.outline = #ffffff
		target.outline = #ffffff
		ids = #ffffff
	}
	boundary = #ffffff
	diagonals = #ffffff
	dualgraph = #ffffff
	polygon = #666666
	sleeve = #aaaaaa
	sleeve.done = #3300ff00
	path {
		left = #ffffff
		right = #ffffff
		left.top = #ffffff
		right.top = #ffffff
		apex = #ffffff
		common = #ffffff
	}
}
