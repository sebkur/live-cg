task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven'

group = pGroup
version = pVersion

repositories {
    maven {
        url 'http://mvn.topobyte.de'
    }
    mavenCentral()
}

dependencies {
    compile 'de.topobyte:commons-cli-helper:0.0.1'
    compile 'de.topobyte:jts2awt:0.0.1'

    compile 'com.vividsolutions:jts:1.13'
    compile 'org.apache.xmlgraphics:batik-svg-dom:1.7'
    compile 'commons-cli:commons-cli:1.2'
    compile 'commons-codec:commons-codec:1.10'
    compile 'gov.nist.math:jama:1.0.3'
    compile 'org.freedesktop.tango:tango-icon-theme:0.8.90'

    compile fileTree(dir: 'lib', include: ['*.jar'])

    compile 'org.slf4j:slf4j-api:1.6.1'
    runtime 'org.slf4j:slf4j-log4j12:1.6.1'
    runtime 'log4j:log4j:1.2.16'
}

mainClassName = 'de.topobyte.livecg.LiveCG'

task copyJars(type: Copy) {
    into "$buildDir/lib-run"
    from jar
}

task copyDeps(type: Copy) {
    into "$buildDir/lib-run"
    from configurations.runtime
}

task createRuntime(dependsOn: [copyJars, copyDeps]) {
    description 'Setup the execution environment for the scripts'
}

task jarUI(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.topobyte.livecg.LiveCG'
    }
    baseName = 'livecg-ui'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarCreateImage(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.topobyte.livecg.CreateImage'
    }
    baseName = 'livecg-create-image'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarShowVisualization(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.topobyte.livecg.ShowVisualization'
    }
    baseName = 'livecg-visualization'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task fatJars(dependsOn: ['jarUI', 'jarCreateImage', 'jarShowVisualization']) {
}
