wrapper {
    gradleVersion = '7.6.1'
}

apply plugin: 'application'
apply plugin: 'eclipse'

group = pGroup
version = pVersion

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url 'https://mvn.topobyte.de'
    }
    mavenCentral()
}

dependencies {
    implementation 'de.topobyte:commons-cli-helper:0.0.6'
    implementation 'de.topobyte:jts2awt:0.0.1'
    implementation 'de.topobyte:adt-tree:0.0.10'
    implementation 'de.topobyte:awt-utils:0.0.3'
    implementation 'de.topobyte:swing-utils:0.0.11'
    implementation 'de.topobyte:no-awt:0.0.1'
    implementation 'de.topobyte:no-awt-javagraphics-clipper:0.0.1'
    implementation 'de.topobyte:chromaticity-core:0.0.2'
    implementation 'de.topobyte:viewports-swing:0.0.1'
    implementation 'de.topobyte:linear-algebra:0.0.2'

    implementation 'com.vividsolutions:jts:1.13'
    implementation 'org.apache.xmlgraphics:batik-svg-dom:1.7'
    implementation 'commons-cli:commons-cli:1.2'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'org.freedesktop.tango:tango-icon-theme:0.8.90'

    implementation 'org.slf4j:slf4j-api:1.6.1'
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.6.1'
    runtimeOnly 'log4j:log4j:1.2.16'
}

mainClassName = 'de.topobyte.livecg.LiveCG'

task copyJars(type: Copy) {
    into "$buildDir/lib-run"
    from jar
}

task copyDeps(type: Copy) {
    into "$buildDir/lib-run"
    from configurations.runtimeClasspath
}

task createRuntime(dependsOn: [copyJars, copyDeps]) {
    description 'Setup the execution environment for the scripts'
}

task jarUI(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.topobyte.livecg.LiveCG'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    baseName = 'livecg-ui'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarCreateImage(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.topobyte.livecg.CreateImage'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    baseName = 'livecg-create-image'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarShowVisualization(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.topobyte.livecg.ShowVisualization'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    baseName = 'livecg-visualization'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task fatJars(dependsOn: ['jarUI', 'jarCreateImage', 'jarShowVisualization']) {
}
